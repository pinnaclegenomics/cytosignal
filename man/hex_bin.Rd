% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting_utility.r
\name{hex_bin}
\alias{hex_bin}
\title{GGPLOT2 FUNCTIONALITY FOR MAPPING TO HEXAGON SIZE AND COLOUR AESTHETICS
by Robin Edwards, 2013 (geotheory.co.uk, @geotheory)
This has been adapted from the ggplot bin_hex.R script that underpins geom_hex, etc
(see https://github.com/hadley/densityvis/blob/master/R/bin-hex.r).}
\usage{
hex_bin(
  x,
  y,
  weight = NULL,
  var4 = NULL,
  width = NULL,
  height = NULL,
  xbins = 20,
  ybins = 20,
  var4.to.color = FALSE,
  na.rm = FALSE,
  hmin = 0,
  hmax = 1,
  xlim = NULL,
  ylim = NULL,
  ...
)
}
\arguments{
\item{x}{a numeric vector of x positions}

\item{y}{a numeric vector of y positions}

\item{weight}{\code{NULL} or a numeric vector providing weights for each
observation, replace \code{counts}, mapped to color}

\item{var4}{\code{NULL} or a numeric vector providing weights for each
observation, averaged within each bin, mapped to hex bin size}

\item{width}{width of each hexagon, if \code{NULL} computed from ybins}

\item{height}{height of each hexagon, if \code{NULL} computed from ybins}

\item{xbins}{number of horizontal bins, if \code{width} unspecified}

\item{ybins}{number of vertical bins, if \code{height} unspecified}

\item{na.rm}{If \code{TRUE} missing values will be silently removed,
otherwise they will be removed with a warning.}
}
\value{
A data frame with columns \code{x}, \code{y} and \code{freq},
and attributes \code{width} and \code{height}.
}
\description{
These functions implement aesthetic mapping to hexagon size (area), in addition to the existing
colour-mapping functionality.  The key change is the addition of a new fourth variable (var4)
to hex_bin(), which complements the inbuilt hexagon binning functionality.  The 'frequency.to.area'
argument enables the default mappings of binned data to colour and var4 to size to be interchanged.
The hmin/hmax arguments \link{0,1} set area mapping constraints (hmax can exceed 1).
xlim/xlat enable hexagon tesselation to be constrained independently of data range.
There may be some bugs in the implementation. A legend for hexagon size has not been implemented.
Bin data into hexagons (2d).
}
\examples{
plot(hex_bin(runif(1e4), runif(1e4)))
plot(hex_bin(rnorm(1e4), rnorm(1e4)))

data(baseball, package = "plyr")
bin <- hex_bin(baseball$g, baseball$ab)
}
\seealso{
\code{\link{hex_pos}} for algorithm that finds hexagon center
closest to each point and \code{\link{hex_coord}} that generates
coordinates of each hexagon.
}
